'''
ЁЯНК919.ф╝Ъшооход II
ф╕нчнЙ  https://www.lintcode.com/problem/919/
ч╗ЩхоЪф╕Ач│╗хИЧчЪДф╝ЪшооцЧ╢щЧ┤щЧ┤щЪФintervalsя╝МхМЕцЛмш╡╖хзЛхТМч╗УцЭЯцЧ╢щЧ┤[[s1,e1],[s2,e2],...] (si < ei)я╝МцЙ╛хИ░цЙАщЬАчЪДцЬАх░ПчЪДф╝ЪшооходцХ░щЗПуАВ

ца╖ф╛Л1
ш╛УхЕе: intervals = [(0,30),(5,10),(15,20)]
ш╛УхЗ║: 2
шзгщЗК: щЬАшжБф╕дф╕кф╝Ъшооход
ф╝Ъшооход1:(0,30)
ф╝Ъшооход2:(5,10),(15,20)

ца╖ф╛Л2
ш╛УхЕе: intervals = [(2,7)]
ш╛УхЗ║: 1
шзгщЗК: хПкщЬАшжБ1ф╕кф╝Ъшооходх░▒хдЯф║Ж
'''

# python: цЙлцППч║┐ 

"""
Definition of Interval.
class Interval(object):
    def __init__(self, start, end):
        self.start = start
        self.end = end
"""
class Solution:
    """
    @param intervals: an array of meeting time intervals
    @return: the minimum number of conference rooms required
    """
    def minMeetingRooms(self, intervals):
        if not intervals or len(intervals) <= 1:
            return 0 if not intervals else 1
        times = []
        for t in intervals:
            times.append((t.start, 1))
            times.append((t.end, -1))
        times = sorted(times, key = lambda x: x[0])

        match, need = 0, 1
        cur = 0
        for time in times:
            match += time[1]
            need = max(need, match)
            cur = time[0]
        return need






